local printer = require "printer.printer"
local styles = {
	standard = {
		scale = .8,
	}
}
local texts = {"{standard}Salvage detected within the cave system.", 
"{standard}More signals detected.",
"{standard}"}
local salvage_level_1 = {"Destroyer wreckage, decades old. Highly corroded.",
"Remnants of frigate hull cuttings.",
"Discarded munitions. Still of use.",
"Lost research equipment. Study subjects unknown.",
"Shell casings. Relatively recent. Origin unknown."}
local salvage_level_2 = {"Blood. Blood in the water...",
"Brass and Steel plates. Engineering vessel.",
"Impossible metal shapes. Filled with holess.",
"Wood and Wine. Shipwreck.",
"Crystalline formations. Formed over Skeletons.",
"Fossils of Unknown Specimens. Science Vessel."}
local salvage_level_3 = {"The Holy.",
"The Vessel: Empty. Or The Vessel. Empty.",
"A Void of Effervescence",
"A Seal on a Hole in the World",
"Tissue formed from Steel",
"The Final Step"}

local function next_print(self)
	local text = texts[self.index]
	local source = nil
	self.printer:print(text)
end

function init(self)
	self.printer = printer.new(self, "printer")
	printer.add_styles(styles)
	self.index = 1
	self.current_depth = 0
	timer.delay(0.5, false, function()
		next_print(self)
	end)
end

function final(self)
	self.printer:final(self)
end

function update(self, dt)
	self.printer:update(dt)
	-- if not self.printer.is_print then
	-- 	
	-- end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("initial_depth") then
		self.current_depth = message.depth
	end
	if message_id == hash("torpedo_fired") then
		if message.remaining == 2 then
			local node = gui.get_node("torpedo2")
			gui.play_flipbook(node, "UI-empty-torpedo")
		elseif message.remaining == 1 then
			local node = gui.get_node("torpedo1")
			gui.play_flipbook(node, "UI-empty-torpedo")
		else
			local node = gui.get_node("torpedo")
			gui.play_flipbook(node, "UI-empty-torpedo")
		end
	end
	if message_id == hash("restore") then
		local torpedo2 = gui.get_node("torpedo2")
		local torpedo1 = gui.get_node("torpedo1")
		local torpedo = gui.get_node("torpedo")
		local health = gui.get_node("sub")
		gui.play_flipbook(torpedo2, "UI-ready-torpedo")
		gui.play_flipbook(torpedo1, "UI-ready-torpedo")
		gui.play_flipbook(torpedo, "UI-ready-torpedo")
		gui.play_flipbook(health, "UI-minisub1")
	end
	if message_id == hash("damage") then
		local node = gui.get_node("sub")
		if message.remaining == 2 then
			gui.play_flipbook(node, "UI-minisub2")
		elseif message.remaining == 1 then
			gui.play_flipbook(node, "UI-minisub3")
		end
	end
	if message_id == hash("send_depth") then
		local depth = message.depth
		local text_node = gui.get_node("depth")
		local text = gui.get_text(text_node)
		if depth < self.current_depth - 9 then
			gui.set_text(text_node, "00"..text + 1)
			self.current_depth = depth
		elseif depth > self.current_depth + 9 then
			gui.set_text(text_node, "00"..text-1)
			self.current_depth = depth
		end
	end
	if message_id == hash("salvage_text") then
		local level = "salvage_level_"..message.level
		local index = message.salvage_number
		self.printer:print(level[index])
	end
end