function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(".", "acquire_camera_focus")
	self.velocity = vmath.vector3()
	self.input = vmath.vector3()
	self.max_velocity = 40
	self.correction = vmath.vector3()
	self.dir = vmath.vector3(1, 0, 0)
	self.firing = false
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if vmath.length_sqr(self.input) > 1 then
		self.input = vmath.normalize(self.input)
	end

	if self.firing then
		local angle = math.atan2(self.dir.y, self.dir.x)
		local rot = vmath.quat_rotation_z(angle)
		local props = { dir = self.dir }
		factory.create("#torpedofactory", nil, rot, props)
	end

	local acceleration = self.input * 50
	
	local dv = acceleration * dt
	local v0 = self.velocity
	local v1 = self.velocity + dv
	
	v1.x = math.min(v1.x, 40)
	v1.y = math.min(v1.y, 40)
	v1.x = math.max(v1.x, -40)
	v1.y = math.max(v1.y, -40)
	
	local movement = (v0 + v1) * dt * 0.5
	
	local p = go.get_position()
	go.set_position(p + movement)

	self.velocity = v1 * 0.99
	self.input = vmath.vector3()
	self.firing = false
	self.correction = vmath.vector3()
end

function on_message(self, message_id, message, sender)
	-- if message_id == hash("collision_response") then
	-- 	print("collided with "..message.other_id)
	-- 	print("collided with group "..message.other_group)
	-- end
	if message_id == hash("contact_point_response") then
		if message.distance > 0 then
			local proj = vmath.project(self.correction, message.normal * message.distance)
			if proj < 1 then
				local comp = (message.distance - message.distance * proj) * message.normal
				go.set_position(go.get_position() + comp)
				self.correction = self.correction + comp
			end
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("up") then
		self.input.y = 1
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
		self.dir.x = 1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
	end
end